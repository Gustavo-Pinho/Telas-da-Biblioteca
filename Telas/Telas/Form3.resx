<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>